version: "3"
networks:
  laravel:
services:

  # nginx:
  #   build:
  #     dockerfile: Dockerfile.prod
  #     context: ./nginx
  #   container_name: nginx
  #   ports:
  #     - ${FRONT_MAIN_PORT}:80
  #     - 443:443
  #   restart: always
  #   volumes:
  #     - ./data/nginx:/etc/nginx/conf.d
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   depends_on:
  #     - currikiprod-laravel-api
  #     - currikiprod-mysql
  #     - currikiprod-client
  #     - currikiprod-lti-provider
  #   networks:
  #     - currikiprod-laravel
  #     - internet

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    container_name: currikiprod-nginx
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./data/nginx/log:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - currikiprod-laravel-api
      - currikiprod-h5p-api
      - currikiprod-lti-provider
      - currikiprod-client
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - currikiprod-laravel
      - internet

    goaccess:
      image: allinurl/goaccess
      restart: always
      volumes:
        - ./goaccess/config:/srv/config
        - ./goaccess/data:/srv/data
        - ./goaccess/html:/srv/report
        - ./data/logs:/srv/logs
      command: ["--no-global-config", "--config-file=/srv/config/goaccess.conf", "--log-file=/srv/logs/access.log"]
      ports:
      - 7890:7890

    goaccess-nginx:
      image: nginx:1.15-alpine
      volumes:
      - ./goaccess/html:/usr/share/nginx/html
      ports:
      - 7891:80

  # currikiprod-goaccess:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./docker-goaccess
  #   ports:
  #     - 7889:7889
  #   container_name: currikiprod-goaccess
  #   restart: always
  #   volumes:
  #     - './data/nginx/log:/opt/log'
  #     - './docker-goaccess/root/config:/config'
  #   image: gregyankovoy/goaccess
  #   networks:
  #     - currikiprod-laravel


  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - currikiprod-laravel

  currikiprod-mysql:
    image: mysql:5.7.22
    container_name: currikiprod-mysql
    restart: unless-stopped
    tty: true
    volumes:
      - currikiprod-mysqldata:/var/lib/mysql
      - ./tmp/database/setup.sql:/docker-entrypoint-initdb.d/setup.sql:ro
      - ./tmp/database/install_db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    # command: mysqld --init-file="/tmp/database/install_db.sql"
    networks:
      - currikiprod-laravel
  

  currikiprod-laravel-api:
    build:
      dockerfile: ./ActiveLearningStudio-laravel-api/Dockerfile.dev
      context: .
    container_name: currikiprod-laravel-api
    volumes:
      - ./ActiveLearningStudio-laravel-api:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - currikiprod-mongodb
      - currikiprod-mysql
    restart: always
    networks:
      - currikiprod-laravel


  currikiprod-h5p-api:
    build:
      dockerfile: ./ActiveLearningStudio-h5p/Dockerfile.dev
      context: .
    container_name: currikiprod-h5p-api
    volumes:
      - ./ActiveLearningStudio-h5p:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - currikiprod-mysql
    restart: always
    networks:
      - currikiprod-laravel

  currikiprod-lti-provider:
    build:
      dockerfile: ./ActiveLearningStudio-lti-provider/Dockerfile.dev
      context: .
    container_name: currikiprod-lti-provider
    volumes:
      - ./ActiveLearningStudio-lti-provider:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - currikiprod-mongodb
    restart: always
    networks:
      - currikiprod-laravel

      
  # composer:
  #   image: composer:latest
  #   container_name: currikiprod-composer
  #   volumes:
  #     - ./ActiveLearningStudio-laravel-api:/var/www/html
  #   working_dir: /var/www/html
  #   depends_on:
  #     - currikiprod-laravel-api
  #   networks:
  #     - currikiprod-laravel
      
  # artisan:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: currikiprod-artisan
  #   volumes:
  #     - ./ActiveLearningStudio-laravel-api:/var/www/html
  #   depends_on:
  #     - currikiprod-mysql
  #   working_dir: /var/www/html
  #   entrypoint: ['/var/www/html/artisan']
  #   networks:
  #     - currikiprod-laravel
      
  currikiprod-phpmyadmin:
    depends_on:
      - currikiprod-mysql
    image: phpmyadmin/phpmyadmin
    container_name: currikiprod-phpmyadmin
    restart: always
    volumes:
      - ./php.ini:/usr/local/etc/php/php.ini
    environment:
      PMA_HOST: currikiprod-mysql
      MYSQL_ROOT_PASSWORD: secret
      PMA_ABSOLUTE_URI: http://studio.curriki.org/phpmyadmin/
    networks:
      - currikiprod-laravel

  currikiprod-mongodb:
    container_name: currikiprod-mongodb
    image: mongo
    restart: always
    working_dir: /var/app/current
    command: mongod
    ports:
      - "28018:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - currikiprod-mongodbdata:/data/db
      - ./mongoscripts:/var/app/current/mongoscripts
      # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - currikiprod-laravel

  currikiprod-client:
    build:
      dockerfile: Dockerfile.prod
      context: ./ActiveLearningStudio-react-client
    container_name: currikiprod-client
    volumes:
      - /app/node_modules
      - ./ActiveLearningStudio-react-client:/app
    restart: always
    networks:
      - currikiprod-laravel
      
volumes: #provide volume
    currikiprod-mongodbdata:
      external: true
    currikiprod-mysqldata:
      external: true

networks:
  currikiprod-laravel:
    driver: bridge
  internet:
    external:
      name: internet