version: "3"
networks:
  laravel:
services:

  currikidev-goaccess:
    image: allinurl/goaccess
    container_name: currikidev-goaccess
    restart: always
    volumes:
      - ./goaccess/config:/srv/config
      - ./goaccess/data:/srv/data
      - ./goaccess/html:/srv/report
      - ./data/nginx/log:/srv/logs
    command: ["--no-global-config", "--config-file=/srv/config/goaccess.conf", "--log-file=/srv/logs/access.log"]

    ports:
      - 7890:7890
    networks:
      - currikidev-laravel

  currikidev-goaccess-nginx:
    image: nginx:1.15-alpine
    container_name: currikidev-goaccess-nginx
    depends_on: 
      - currikidev-goaccess
    volumes:
      - ./data/nginx/goaccess-conf:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./goaccess/html:/usr/share/nginx/html
    ports:
      - 7891:80
    networks:
      - currikidev-laravel

  currikidev-nginx:
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    volumes:
      - ./data/nginx/log:/var/log/nginx
    container_name: currikidev-nginx
    ports:
      - ${FRONT_MAIN_PORT}:80
    restart: always
    depends_on:
      - currikidev-laravel-api
      - currikidev-mysql
      - currikidev-client
      - currikidev-lti-provider
    networks:
      - currikidev-laravel

  

  # currikidev-goaccess:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./docker-goaccess
  #   ports:
  #     - 7889:7889
  #   container_name: currikidev-goaccess
  #   restart: always
  #   volumes:
  #     - './data/nginx/log:/opt/log'
  #     - './docker-goaccess/root/config:/config'
  #   image: gregyankovoy/goaccess
  #   networks:
  #     - currikidev-laravel


 

  currikidev-mysql:
    image: mysql:5.7.22
    container_name: currikidev-mysql
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_LOCAL_PORT}:3306
    volumes:
      - currikidev-mysqldata:/var/lib/mysql
      - ./tmp/database/setup.sql:/docker-entrypoint-initdb.d/setup.sql:ro
      - ./tmp/database/install_db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    # command: mysqld --init-file="/tmp/database/install_db.sql"
    networks:
      - currikidev-laravel
  

  currikidev-laravel-api:
    build:
      dockerfile: ./ActiveLearningStudio-laravel-api/Dockerfile.dev
      context: .
    container_name: currikidev-laravel-api
    ports:
      - ${LARAVEL_API_LOCAL_PORT}:9000
    volumes:
      - ./ActiveLearningStudio-laravel-api:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - currikidev-mongodb
    restart: always
    networks:
      - currikidev-laravel


  
  currikidev-h5p-api:
    build:
      dockerfile: ./ActiveLearningStudio-h5p/Dockerfile.dev
      context: .
    container_name: currikidev-h5p-api
    ports:
      - ${LARAVEL_H5P_API_PORT}:7000
    volumes:
      - ./ActiveLearningStudio-h5p:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - currikidev-mysql
    restart: always
    networks:
      - currikidev-laravel
    

  currikidev-lti-provider:
    build:
      dockerfile: ./ActiveLearningStudio-lti-provider/Dockerfile.dev
      context: .
    container_name: currikidev-lti-provider
    ports:
      - ${LTI_PROVIDER_LOCAL_PORT}:9500
    volumes:
      - ./ActiveLearningStudio-lti-provider:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - currikidev-mongodb
    restart: always
    networks:
      - currikidev-laravel

      
  # composer:
  #   image: composer:latest
  #   container_name: currikidev-composer
  #   volumes:
  #     - ./ActiveLearningStudio-laravel-api:/var/www/html
  #   working_dir: /var/www/html
  #   depends_on:
  #     - currikidev-laravel-api
  #   networks:
  #     - currikidev-laravel
      
  # artisan:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: currikidev-artisan
  #   volumes:
  #     - ./ActiveLearningStudio-laravel-api:/var/www/html
  #   depends_on:
  #     - currikidev-mysql
  #   working_dir: /var/www/html
  #   entrypoint: ['/var/www/html/artisan']
  #   networks:
  #     - currikidev-laravel
      
  currikidev-phpmyadmin:
    depends_on:
      - currikidev-mysql
    image: phpmyadmin/phpmyadmin
    container_name: currikidev-phpmyadmin
    restart: always
    ports:
      - 8088:80
    volumes:
      - ./php.ini:/usr/local/etc/php/php.ini
    environment:
      PMA_HOST: currikidev-mysql
      MYSQL_ROOT_PASSWORD: secret
      PMA_ABSOLUTE_URI: http://localhost:8082/phpmyadmin/
    networks:
      - currikidev-laravel

  currikidev-mongodb:
    container_name: currikidev-mongodb
    image: mongo
    restart: always
    working_dir: /var/app/current
    command: mongod
    ports:
      - "28018:27017"
    # environment:
    #   - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    #   - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
    #   - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - currikidev-mongodbdata:/data/db
      - ./mongoscripts:/var/app/current/mongoscripts
      # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - currikidev-laravel
  currikidev-client:
    build:
      dockerfile: Dockerfile.dev
      context: ./ActiveLearningStudio-react-client
    container_name: currikidev-client
    ports:
      - ${CLIENT_LOCAL_PORT}:3000
    volumes:
      - /var/app/current/node_modules
      - ./ActiveLearningStudio-react-client:/var/app/current
    restart: always
    networks:
      - currikidev-laravel
volumes: #provide volume
    currikidev-mongodbdata:
      external: true
    currikidev-mysqldata:
      external: true

networks:
  currikidev-laravel:
    driver: bridge